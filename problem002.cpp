#include "stdafx.h"
#include <iostream>
#include <vector>
#include <string>

#include "pe.h"

#include <boost/range/irange.hpp>

#include <yuh/fibonacci.hpp>

using namespace euler;

int main(int argc, char* argv[])
{
	std::vector<std::string> state = 
	{
		"Problem 2",
		"",
		"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:",
		"",
		"1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...",
		"",
		"By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.",

	};
	auto f = []() -> int
	{
		int ret = 0;
		
		const auto upper = 4000000; 
		
		//フィボナッチ数列
		for ( const auto fib: yuh::fibonacci() )
		{
			//上限
			if(fib > upper) break;

			if(fib % 2 == 0)
			{ //偶数
				ret += fib;
			}
		}

		return ret;
	};

	solve(f, state);
	
	return 0;
}
